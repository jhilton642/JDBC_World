#@RequestMapping("region")
#public String region(@RequestParam String region, Model model) throws Exception {
#
#List<Country> countries = new ArrayList<>();
#double population = 0;
#
#try {
#Statement stmt = con.createStatement();
#String query = "SELECT Name, Code, HeadOfState, Region, Continent, Population, SurfaceArea FROM Country ";
#if (region != null && region.length() > 0)
#query += "WHERE Region like '%" + region + "%' ";
#query += "ORDER BY Name";
#
#ResultSet results = stmt.executeQuery(query);
#//  retrieve all rows from the result set
#while (results.next()) {
#population += results.getInt("population");        //  sum up the population for the countries in the result set
#Country country = new Country();
#country.setName         (results.getString("Name"));
#country.setCode         (results.getString("Code"));
#country.setHeadOfState  (results.getString("headOfState"));
#country.setRegion       (results.getString("Region"));
#country.setContinent    (results.getString("Continent"));
#country.setPopulation   (results.getInt("population"));
#country.setSurfaceArea  (results.getInt("SurfaceArea"));
#countries.add(country);                       //  this will be our list of cities to save to our web page
#}
#} catch (Exception except) {
#System.out.println(except.getMessage());
#SQLException ex = new SQLException("Query or Connection Failed: " + except.getMessage());
#}
#model.addAttribute("title", "First JDBC Application");
#model.addAttribute("countries", countries);
#model.addAttribute("population", population);
#model.addAttribute("region", region);
#return "countries";
#}
#
